{"ast":null,"code":"import * as actionTypes from \"../../actions/actionTypes/reminders\";\nimport { switchMap, mergeMap } from \"rxjs/operators\";\nimport { ofType } from \"redux-observable\";\nimport { ajax } from \"rxjs/ajax\";\nimport { saveRemindersList, getRemindersList } from \"../../actions/actions/reminders\";\nexport const params = (url, method, action) => ({\n  url: url,\n  method: method,\n  body: JSON.stringify(action)\n});\nexport const fetchReminderListEpic = action$ => {\n  return action$.pipe(ofType(actionTypes.GET_REMINDERS_LIST_START), switchMap(action => ajax(\"https://reminder-app-548d7.firebaseio.com/\".concat(action.payload, \"/reminders.json\")).pipe(mergeMap(data => [saveRemindersList(data.response)]))));\n};\nexport const postReminderEpic = action$ => {\n  return action$.pipe(ofType(actionTypes.POST_REMINDER), switchMap(action => ajax(params(\"https://reminder-app-548d7.firebaseio.com/\".concat(action.payload.userId, \"/reminders.json\"), \"POST\", action.payload.body)).pipe(mergeMap(() => [getRemindersList(action.payload.userId)]))));\n};\nexport const deleteReminderEpic = action$ => {\n  return action$.pipe(ofType(actionTypes.DELETE_REMINDER), switchMap(action => ajax(params(\"https://reminder-app-548d7.firebaseio.com/\".concat(action.payload.userId, \"/reminders/\").concat(action.payload.id, \".json\"), \"DELETE\")).pipe(mergeMap(() => [getRemindersList(action.payload.userId)]))));\n};\nexport const editReminderEpic = action$ => {\n  return action$.pipe(ofType(actionTypes.EDIT_REMINDER), switchMap(action => ajax(params(\"https://reminder-app-548d7.firebaseio.com/\".concat(action.payload.userId, \"/reminders/\").concat(action.payload.id, \".json\"), \"PATCH\", action.payload.body)).pipe(mergeMap(() => [getRemindersList(action.payload.userId)]))));\n};","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/store/epics/epics/reminders.js"],"names":["actionTypes","switchMap","mergeMap","ofType","ajax","saveRemindersList","getRemindersList","params","url","method","action","body","JSON","stringify","fetchReminderListEpic","action$","pipe","GET_REMINDERS_LIST_START","payload","data","response","postReminderEpic","POST_REMINDER","userId","deleteReminderEpic","DELETE_REMINDER","id","editReminderEpic","EDIT_REMINDER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,qCAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,gBAApC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,iCAHP;AAKA,OAAO,MAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,MAAd,MAA0B;AAC9CF,EAAAA,GAAG,EAAEA,GADyC;AAE9CC,EAAAA,MAAM,EAAEA,MAFsC;AAG9CE,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,MAAf;AAHwC,CAA1B,CAAf;AAMP,OAAO,MAAMI,qBAAqB,GAAGC,OAAO,IAAI;AAC9C,SAAOA,OAAO,CAACC,IAAR,CACLb,MAAM,CAACH,WAAW,CAACiB,wBAAb,CADD,EAELhB,SAAS,CAACS,MAAM,IACdN,IAAI,qDAEAM,MAAM,CAACQ,OAFP,qBAAJ,CAIEF,IAJF,CAIOd,QAAQ,CAACiB,IAAI,IAAI,CAACd,iBAAiB,CAACc,IAAI,CAACC,QAAN,CAAlB,CAAT,CAJf,CADO,CAFJ,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMC,gBAAgB,GAAGN,OAAO,IAAI;AACzC,SAAOA,OAAO,CAACC,IAAR,CACLb,MAAM,CAACH,WAAW,CAACsB,aAAb,CADD,EAELrB,SAAS,CAACS,MAAM,IACdN,IAAI,CACFG,MAAM,qDAEFG,MAAM,CAACQ,OAAP,CAAeK,MAFb,sBAIJ,MAJI,EAKJb,MAAM,CAACQ,OAAP,CAAeP,IALX,CADJ,CAAJ,CAQEK,IARF,CAQOd,QAAQ,CAAC,MAAM,CAACI,gBAAgB,CAACI,MAAM,CAACQ,OAAP,CAAeK,MAAhB,CAAjB,CAAP,CARf,CADO,CAFJ,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAGT,OAAO,IAAI;AAC3C,SAAOA,OAAO,CAACC,IAAR,CACLb,MAAM,CAACH,WAAW,CAACyB,eAAb,CADD,EAELxB,SAAS,CAACS,MAAM,IACdN,IAAI,CACFG,MAAM,qDAEFG,MAAM,CAACQ,OAAP,CAAeK,MAFb,wBAGUb,MAAM,CAACQ,OAAP,CAAeQ,EAHzB,YAIJ,QAJI,CADJ,CAAJ,CAOEV,IAPF,CAOOd,QAAQ,CAAC,MAAM,CAACI,gBAAgB,CAACI,MAAM,CAACQ,OAAP,CAAeK,MAAhB,CAAjB,CAAP,CAPf,CADO,CAFJ,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMI,gBAAgB,GAAGZ,OAAO,IAAI;AACzC,SAAOA,OAAO,CAACC,IAAR,CACLb,MAAM,CAACH,WAAW,CAAC4B,aAAb,CADD,EAEL3B,SAAS,CAACS,MAAM,IACdN,IAAI,CACFG,MAAM,qDAEFG,MAAM,CAACQ,OAAP,CAAeK,MAFb,wBAGUb,MAAM,CAACQ,OAAP,CAAeQ,EAHzB,YAIJ,OAJI,EAKJhB,MAAM,CAACQ,OAAP,CAAeP,IALX,CADJ,CAAJ,CAQEK,IARF,CAQOd,QAAQ,CAAC,MAAM,CAACI,gBAAgB,CAACI,MAAM,CAACQ,OAAP,CAAeK,MAAhB,CAAjB,CAAP,CARf,CADO,CAFJ,CAAP;AAcD,CAfM","sourcesContent":["import * as actionTypes from \"../../actions/actionTypes/reminders\";\nimport { switchMap, mergeMap } from \"rxjs/operators\";\nimport { ofType } from \"redux-observable\";\nimport { ajax } from \"rxjs/ajax\";\nimport {\n  saveRemindersList,\n  getRemindersList\n} from \"../../actions/actions/reminders\";\n\nexport const params = (url, method, action) => ({\n  url: url,\n  method: method,\n  body: JSON.stringify(action)\n});\n\nexport const fetchReminderListEpic = action$ => {\n  return action$.pipe(\n    ofType(actionTypes.GET_REMINDERS_LIST_START),\n    switchMap(action =>\n      ajax(\n        `https://reminder-app-548d7.firebaseio.com/${\n          action.payload\n        }/reminders.json`\n      ).pipe(mergeMap(data => [saveRemindersList(data.response)]))\n    )\n  );\n};\n\nexport const postReminderEpic = action$ => {\n  return action$.pipe(\n    ofType(actionTypes.POST_REMINDER),\n    switchMap(action =>\n      ajax(\n        params(\n          `https://reminder-app-548d7.firebaseio.com/${\n            action.payload.userId\n          }/reminders.json`,\n          \"POST\",\n          action.payload.body\n        )\n      ).pipe(mergeMap(() => [getRemindersList(action.payload.userId)]))\n    )\n  );\n};\n\nexport const deleteReminderEpic = action$ => {\n  return action$.pipe(\n    ofType(actionTypes.DELETE_REMINDER),\n    switchMap(action =>\n      ajax(\n        params(\n          `https://reminder-app-548d7.firebaseio.com/${\n            action.payload.userId\n          }/reminders/${action.payload.id}.json`,\n          \"DELETE\"\n        )\n      ).pipe(mergeMap(() => [getRemindersList(action.payload.userId)]))\n    )\n  );\n};\n\nexport const editReminderEpic = action$ => {\n  return action$.pipe(\n    ofType(actionTypes.EDIT_REMINDER),\n    switchMap(action =>\n      ajax(\n        params(\n          `https://reminder-app-548d7.firebaseio.com/${\n            action.payload.userId\n          }/reminders/${action.payload.id}.json`,\n          \"PATCH\",\n          action.payload.body\n        )\n      ).pipe(mergeMap(() => [getRemindersList(action.payload.userId)]))\n    )\n  );\n};\n"]},"metadata":{},"sourceType":"module"}