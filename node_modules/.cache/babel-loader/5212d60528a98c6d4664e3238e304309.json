{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/Header/Header.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SideMenu from \"../Drawer/Drawer\";\nimport { Icon, Avatar } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport fire from \"../../config\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    height: 50,\n    backgroundColor: \"#344955\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0 20px\",\n    color: \"#FFFFFF\"\n  },\n  menuIcon: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"& > span\": {\n      cursor: \"pointer\"\n    }\n  },\n  menuIconItem: {\n    marginLeft: 18\n  },\n  profilePicture: {\n    width: \"100%\"\n  }\n}));\n\nconst Header = props => {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpenSideMenu = _useState2[0],\n        setIsOpenSideMenu = _useState2[1];\n\n  const profilePictureURL = useSelector(state => state.root.profilePictureURL);\n  const user = fire.auth().currentUser;\n\n  const toggleDrawer = isOpen => event => {\n    setIsOpenSideMenu(isOpen);\n  };\n\n  const renderProfilePictureFromRedux = profilePictureURL ? React.createElement(\"img\", {\n    src: profilePictureURL,\n    alt: \"avatar\",\n    className: classes.profilePicture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : \"A\";\n  const renderProfilePicture = user.photoURL ? React.createElement(\"img\", {\n    src: user.photoURL,\n    alt: \"avatar\",\n    className: classes.profilePicture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : null;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: toggleDrawer(true),\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"menu\")), React.createElement(\"div\", {\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    \"aria-describedby\": \"avatar\",\n    className: classes.menuIconItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, profilePictureURL ? renderProfilePictureFromRedux : renderProfilePicture))), React.createElement(SideMenu, {\n    toggleDrawer: toggleDrawer,\n    open: isOpenSideMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/Header/Header.js"],"names":["React","useState","makeStyles","SideMenu","Icon","Avatar","useSelector","fire","useStyles","theme","header","height","backgroundColor","display","justifyContent","alignItems","padding","color","menuIcon","cursor","menuIconItem","marginLeft","profilePicture","width","Header","props","classes","isOpenSideMenu","setIsOpenSideMenu","profilePictureURL","state","root","user","auth","currentUser","toggleDrawer","isOpen","event","renderProfilePictureFromRedux","renderProfilePicture","photoURL"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SideMenu from \"../Drawer/Drawer\";\nimport {Icon,Avatar} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport fire from \"../../config\";\n\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    height: 50,\n    backgroundColor: \"#344955\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0 20px\",\n    color: \"#FFFFFF\",\n  },\n  menuIcon: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \"& > span\": {\n      cursor: \"pointer\"\n    }\n  },\n  menuIconItem: {\n    marginLeft: 18\n  },\n  profilePicture: {\n    width: \"100%\"\n  }\n}));\n\nconst Header = props => {\n  const classes = useStyles();\n  const [isOpenSideMenu, setIsOpenSideMenu] = useState(false);\n  const profilePictureURL = useSelector(state => state.root.profilePictureURL);\n  const user = fire.auth().currentUser;\n  const toggleDrawer = isOpen => event => {\n    setIsOpenSideMenu(isOpen);\n  };\n\n  const renderProfilePictureFromRedux = profilePictureURL ? (\n    <img\n      src={profilePictureURL}\n      alt=\"avatar\"\n      className={classes.profilePicture}\n    />\n  ) : (\n    \"A\"\n  );\n\n  const renderProfilePicture = user.photoURL ? (\n    <img src={user.photoURL} alt=\"avatar\" className={classes.profilePicture} />\n  ) : null;\n\n  return (\n    <React.Fragment>\n      <div className={classes.header}>\n        <div onClick={toggleDrawer(true)} className={classes.menuIcon}>\n          <Icon>menu</Icon>\n        </div>\n        <div className={classes.menuIcon}>\n          <Avatar aria-describedby={\"avatar\"} className={classes.menuIconItem}>\n            {profilePictureURL\n              ? renderProfilePictureFromRedux\n              : renderProfilePicture}\n          </Avatar>\n        </div>\n      </div>\n      <SideMenu toggleDrawer={toggleDrawer} open={isOpenSideMenu} />\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}