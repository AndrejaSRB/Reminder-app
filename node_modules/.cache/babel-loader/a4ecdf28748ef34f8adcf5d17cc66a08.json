{"ast":null,"code":"import _objectSpread from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/ListReminders/ListReminders.js\";\nimport React, { useState, lazy, Suspense } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"../UI/Loader\";\nimport withDashboard from \"../../hoc/withDashboard\";\nimport Reminder from \"../Reminders/Reminder/Reminder\";\nimport { Typography, Grid, Hidden, Fab } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  addToDoSmallDevices: {\n    position: \"fixed\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    bottom: 30,\n    zIndex: 1111,\n    border: \"5px solid #F0EFE9\",\n    borderRadius: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%)\",\n    \"& > button\": {\n      backgroundColor: \"#F9AA33\",\n      color: \"#232F34\"\n    }\n  }\n});\n\nconst ListToDo = () => {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAddModalOpen = _useState2[0],\n        setIsAddModalOpen = _useState2[1];\n\n  const _useState3 = useState({\n    today: true,\n    tomorrow: true,\n    upcoming: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        displayReminderList = _useState4[0],\n        setDisplayReminderList = _useState4[1];\n\n  const reminderTodayList = useSelector(state => state.reminder.today);\n  const user = useSelector(state => state.root.user);\n  const reminderUpcomingList = useSelector(state => state.reminder.upcoming);\n  const reminderTomorrowList = useSelector(state => state.reminder.tomorrow);\n  const today = displayReminderList.today,\n        tomorrow = displayReminderList.tomorrow,\n        upcoming = displayReminderList.upcoming;\n  const AddReminder = lazy(() => import(\"../Reminders/AddReminder/AddReminder\"));\n\n  const handleModalAdd = isOpen => {\n    setIsAddModalOpen(isOpen);\n  };\n\n  const renderRemindes = reminder => {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      lg: 3,\n      key: reminder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Reminder, {\n      reminder: reminder.value,\n      id: reminder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  };\n\n  const toggleTodayList = name => () => {\n    setDisplayReminderList(_objectSpread({}, displayReminderList, {\n      [name]: !displayReminderList[name]\n    }));\n  };\n\n  const remainderModal = isAddModalOpen ? React.createElement(Suspense, {\n    fallback: React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(AddReminder, {\n    handleModalAdd: handleModalAdd,\n    open: isAddModalOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })) : null;\n  const renderList = user ? React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    wrap: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    component: \"h2\",\n    color: \"textSecondary\",\n    align: \"left\",\n    onClick: toggleTodayList(\"today\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Today\")), reminderTodayList && today ? reminderTodayList.map(renderRemindes) : null, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    component: \"h2\",\n    color: \"textSecondary\",\n    align: \"left\",\n    onClick: toggleTodayList(\"tomorrow\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Tomorrow\")), reminderTomorrowList && tomorrow ? reminderTomorrowList.map(renderRemindes) : null, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    component: \"h2\",\n    color: \"textSecondary\",\n    align: \"left\",\n    onClick: toggleTodayList(\"tomorrow\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Upcoming\")), reminderUpcomingList && upcoming ? reminderUpcomingList.map(renderRemindes) : null, React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.addToDoSmallDevices,\n    onClick: () => handleModalAdd(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    \"aria-label\": \"add\",\n    className: classes.addIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))))), remainderModal) : null;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, renderList);\n};\n\nexport default withDashboard(ListToDo);","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/ListReminders/ListReminders.js"],"names":["React","useState","lazy","Suspense","makeStyles","AddIcon","useSelector","Loader","withDashboard","Reminder","Typography","Grid","Hidden","Fab","useStyles","addToDoSmallDevices","position","display","justifyContent","alignItems","bottom","zIndex","border","borderRadius","left","transform","backgroundColor","color","ListToDo","classes","isAddModalOpen","setIsAddModalOpen","today","tomorrow","upcoming","displayReminderList","setDisplayReminderList","reminderTodayList","state","reminder","user","root","reminderUpcomingList","reminderTomorrowList","AddReminder","handleModalAdd","isOpen","renderRemindes","id","value","toggleTodayList","name","remainderModal","renderList","map","addIcon"],"mappings":"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","sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"../UI/Loader\";\nimport withDashboard from \"../../hoc/withDashboard\";\nimport Reminder from \"../Reminders/Reminder/Reminder\";\nimport { Typography, Grid, Hidden, Fab } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  addToDoSmallDevices: {\n    position: \"fixed\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    bottom: 30,\n    zIndex: 1111,\n    border: \"5px solid #F0EFE9\",\n    borderRadius: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%)\",\n    \"& > button\": {\n      backgroundColor: \"#F9AA33\",\n      color: \"#232F34\"\n    }\n  }\n});\n\nconst ListToDo = () => {\n  const classes = useStyles();\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [displayReminderList, setDisplayReminderList] = useState({\n    today: true,\n    tomorrow: true,\n    upcoming: false\n  });\n  const reminderTodayList = useSelector(state => state.reminder.today);\n  const user = useSelector(state => state.root.user);\n  const reminderUpcomingList = useSelector(state => state.reminder.upcoming);\n  const reminderTomorrowList = useSelector(state => state.reminder.tomorrow);\n  const { today, tomorrow, upcoming } = displayReminderList;\n  const AddReminder = lazy(() =>\n    import(\"../Reminders/AddReminder/AddReminder\")\n  );\n\n  const handleModalAdd = isOpen => {\n    setIsAddModalOpen(isOpen);\n  };\n\n  const renderRemindes = reminder => {\n    return (\n      <Grid item xs={12} md={4} lg={3} key={reminder.id}>\n        <Reminder reminder={reminder.value} id={reminder.id} />\n      </Grid>\n    );\n  };\n\n  const toggleTodayList = name => () => {\n    setDisplayReminderList({\n      ...displayReminderList,\n      [name]: !displayReminderList[name]\n    });\n  };\n  \n  const remainderModal = isAddModalOpen ? (\n    <Suspense fallback={<Loader />}>\n      <AddReminder handleModalAdd={handleModalAdd} open={isAddModalOpen} />\n    </Suspense>\n  ) : null;\n\n  const renderList = user ? (\n    <Grid container spacing={2} wrap=\"wrap\">\n      <Grid item xs={12}>\n        <Typography\n          gutterBottom\n          variant=\"subtitle1\"\n          component=\"h2\"\n          color=\"textSecondary\"\n          align=\"left\"\n          onClick={toggleTodayList(\"today\")}\n        >\n          Today\n        </Typography>\n      </Grid>\n      {reminderTodayList && today\n        ? reminderTodayList.map(renderRemindes)\n        : null}\n      <Grid item xs={12}>\n        <Typography\n          gutterBottom\n          variant=\"subtitle1\"\n          component=\"h2\"\n          color=\"textSecondary\"\n          align=\"left\"\n          onClick={toggleTodayList(\"tomorrow\")}\n        >\n          Tomorrow\n        </Typography>\n      </Grid>\n      {reminderTomorrowList && tomorrow\n        ? reminderTomorrowList.map(renderRemindes)\n        : null}\n      <Grid item xs={12}>\n        <Typography\n          gutterBottom\n          variant=\"subtitle1\"\n          component=\"h2\"\n          color=\"textSecondary\"\n          align=\"left\"\n          onClick={toggleTodayList(\"tomorrow\")}\n        >\n          Upcoming\n        </Typography>\n      </Grid>\n      {reminderUpcomingList && upcoming\n        ? reminderUpcomingList.map(renderRemindes)\n        : null}\n      <Hidden mdUp>\n        <Grid item xs={12}>\n          <div\n            className={classes.addToDoSmallDevices}\n            onClick={() => handleModalAdd(true)}\n          >\n            <Fab aria-label=\"add\" className={classes.addIcon}>\n              <AddIcon />\n            </Fab>\n          </div>\n        </Grid>\n      </Hidden>\n      {remainderModal}\n    </Grid>\n  ) : null;\n\n  return <React.Fragment>{renderList}</React.Fragment>;\n};\n\nexport default withDashboard(ListToDo);\n"]},"metadata":{},"sourceType":"module"}