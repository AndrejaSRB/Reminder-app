{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/Reminders/Reminder/Reminder.js\";\nimport React, { useState, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as actionTypes from \"../../../store/actions/actionTypes/reminders\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport EditReminder from \"../EditReminder/EditReminder\";\nimport MoreBtn from \"../../UI/MoreBtn\";\nimport { Hidden, CardActionArea, CardActions, Typography, CardContent, Card, Icon, Grid } from \"@material-ui/core\";\nimport CustomCheckbox from \"../../UI/CustomCheckbox\";\nconst useStyles = makeStyles({\n  importance: {\n    width: \"100%\"\n  },\n  high: {\n    borderLeft: \"4px solid #b5302b\"\n  },\n  medium: {\n    borderLeft: \"4px solid #3180EC\"\n  },\n  low: {\n    borderLeft: \"4px solid #28b753\"\n  },\n  cardActions: {\n    width: \"100%\",\n    borderTop: \"3px solid rgba(52, 73, 85, 0.7)\"\n  },\n  cardContent: {\n    minHeight: 152\n  }\n});\n\nconst SingleToDo = props => {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isChecked = _useState2[0],\n        setIsChecked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isClickedMore = _useState4[0],\n        setIsClickedMore = _useState4[1];\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.root.user);\n\n  const handleDelete = id => () => {\n    setIsChecked(!isChecked);\n    dispatch({\n      type: actionTypes.DELETE_REMINDER,\n      payload: {\n        id: id,\n        userId: user.uid\n      }\n    });\n  };\n\n  const handleEditModalOpen = clicked => () => {\n    setIsClickedMore(clicked);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    className: classNames(classes.importance, classes[props.reminder.importance]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.cardContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.reminder.title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.reminder.body))), React.createElement(CardActions, {\n    className: classes.cardActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(MoreBtn, {\n    handleEditModalOpen: handleEditModalOpen,\n    handleDelete: handleDelete,\n    id: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(EditReminder, {\n    handleEditModalOpen: handleEditModalOpen,\n    open: isClickedMore,\n    bigDevices: isClickedMore,\n    id: props.id,\n    reminder: props.reminder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    className: classNames(classes.importance, classes[props.reminder.importance]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.titleContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(CustomCheckbox, {\n    checked: isChecked,\n    onClick: handleDelete(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.reminder.title)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    onClick: handleEditModalOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"more_vert\")))))), React.createElement(EditReminder, {\n    handleEditModalOpen: handleEditModalOpen,\n    open: isClickedMore,\n    id: props.id,\n    reminder: props.reminder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })));\n};\n\nexport default SingleToDo;","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/Reminders/Reminder/Reminder.js"],"names":["React","useState","Fragment","makeStyles","actionTypes","useDispatch","useSelector","classNames","EditReminder","MoreBtn","Hidden","CardActionArea","CardActions","Typography","CardContent","Card","Icon","Grid","CustomCheckbox","useStyles","importance","width","high","borderLeft","medium","low","cardActions","borderTop","cardContent","minHeight","SingleToDo","props","classes","isChecked","setIsChecked","isClickedMore","setIsClickedMore","dispatch","user","state","root","handleDelete","id","type","DELETE_REMINDER","payload","userId","uid","handleEditModalOpen","clicked","reminder","title","body","titleContent"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as actionTypes from \"../../../store/actions/actionTypes/reminders\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport EditReminder from \"../EditReminder/EditReminder\";\nimport MoreBtn from \"../../UI/MoreBtn\";\nimport {\n  Hidden,\n  CardActionArea,\n  CardActions,\n  Typography,\n  CardContent,\n  Card,\n  Icon,\n  Grid\n} from \"@material-ui/core\";\nimport CustomCheckbox from \"../../UI/CustomCheckbox\";\n\nconst useStyles = makeStyles({\n  importance: {\n    width: \"100%\"\n  },\n  high: {\n    borderLeft: \"4px solid #b5302b\"\n  },\n  medium: {\n    borderLeft: \"4px solid #3180EC\"\n  },\n  low: {\n    borderLeft: \"4px solid #28b753\"\n  },\n  cardActions: {\n    width: \"100%\",\n    borderTop: \"3px solid rgba(52, 73, 85, 0.7)\"\n  },\n  cardContent: {\n    minHeight: 152\n  }\n});\n\nconst SingleToDo = props => {\n  const classes = useStyles();\n  const [isChecked, setIsChecked] = useState(false);\n  const [isClickedMore, setIsClickedMore] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.root.user);\n\n  const handleDelete = id => () => {\n    setIsChecked(!isChecked);\n    dispatch({\n      type: actionTypes.DELETE_REMINDER,\n      payload: {\n        id: id,\n        userId: user.uid\n      }\n    });\n  };\n  const handleEditModalOpen = clicked => () => {\n    setIsClickedMore(clicked);\n  };\n\n  return (\n    <Fragment>\n      <Hidden smDown>\n        <Card>\n          <CardActionArea\n            className={classNames(\n              classes.importance,\n              classes[props.reminder.importance]\n            )}\n          >\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {props.reminder.title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {props.reminder.body}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions className={classes.cardActions}>\n            <MoreBtn\n              handleEditModalOpen={handleEditModalOpen}\n              handleDelete={handleDelete}\n              id={props.id}\n            />\n          </CardActions>\n        </Card>\n        <EditReminder\n          handleEditModalOpen={handleEditModalOpen}\n          open={isClickedMore}\n          bigDevices={isClickedMore}\n          id={props.id}\n          reminder={props.reminder}\n        />\n      </Hidden>\n      <Hidden mdUp>\n        <Card>\n          <CardActionArea\n            className={classNames(\n              classes.importance,\n              classes[props.reminder.importance]\n            )}\n          >\n            <CardContent className={classes.titleContent}>\n              <Grid container spacing={1} alignItems=\"center\">\n                <Grid item xs={2}>\n                  <CustomCheckbox checked={isChecked} onClick={handleDelete(props.id)}/>\n                </Grid>\n                <Grid item xs={8}>\n                  <Typography variant=\"subtitle2\" component=\"h2\">\n                    {props.reminder.title}\n                  </Typography>\n                </Grid>\n                <Grid item xs={2}>\n                <Icon onClick={handleEditModalOpen(true)}>more_vert</Icon>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n        <EditReminder\n          handleEditModalOpen={handleEditModalOpen}\n          open={isClickedMore}\n          id={props.id}\n          reminder={props.reminder}\n        />\n      </Hidden>\n    </Fragment>\n  );\n};\n\nexport default SingleToDo;\n"]},"metadata":{},"sourceType":"module"}