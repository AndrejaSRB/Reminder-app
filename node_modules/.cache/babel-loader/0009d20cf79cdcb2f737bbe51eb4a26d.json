{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/Drawer/ListElement.js\";\nimport React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Link } from \"react-router-dom\";\n\nconst Card = props => {\n  const id = props.id,\n        list = props.list,\n        moveListItem = props.moveListItem,\n        findListItem = props.findListItem,\n        syncListElements = props.syncListElements,\n        classes = props.classes;\n  const originalIndex = findListItem(id).index;\n\n  const _useDrag = useDrag({\n    item: {\n      type: ItemTypes.CARD,\n      id,\n      originalIndex\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }),\n        _useDrag2 = _slicedToArray(_useDrag, 2),\n        isDragging = _useDrag2[0].isDragging,\n        drag = _useDrag2[1];\n\n  const _useDrop = useDrop({\n    accept: ItemTypes.CARD,\n    canDrop: () => true,\n    drop: () => syncListElements(),\n\n    hover({\n      id: draggedId\n    }) {\n      if (draggedId !== id) {\n        const _findListItem = findListItem(id),\n              overIndex = _findListItem.index;\n\n        moveListItem(draggedId, overIndex);\n      }\n    }\n\n  }),\n        _useDrop2 = _slicedToArray(_useDrop, 2),\n        drop = _useDrop2[1];\n\n  const opacity = isDragging ? 0 : 1;\n  return React.createElement(\"div\", {\n    ref: node => drag(drop(node)),\n    style: {\n      opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/list/\".concat(list.value.name.toLowerCase()),\n    className: classes.link,\n    key: list.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, list.value.icon)), React.createElement(ListItemText, {\n    primary: list.value.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/Drawer/ListElement.js"],"names":["React","useDrag","useDrop","ItemTypes","ListItem","ListItemIcon","ListItemText","Icon","Link","Card","props","id","list","moveListItem","findListItem","syncListElements","classes","originalIndex","index","item","type","CARD","collect","monitor","isDragging","drag","accept","canDrop","drop","hover","draggedId","overIndex","opacity","node","value","name","toLowerCase","link","listItem","icon"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { useDrag, useDrop } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Link } from \"react-router-dom\";\n\nconst Card = props => {\n  const {id, list, moveListItem, findListItem, syncListElements, classes} = props;\n  const originalIndex = findListItem(id).index;\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, originalIndex },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    canDrop: () => true,\n    drop: () => syncListElements(),\n    hover({ id: draggedId }) {\n      if (draggedId !== id) {\n        const { index: overIndex } = findListItem(id)\n        moveListItem(draggedId, overIndex)\n      }\n    },\n  })\n  const opacity = isDragging ? 0 : 1;\n  return (\n    <div ref={node => drag(drop(node))} style={{ opacity }}>\n      <Link\n        to={`/list/${list.value.name.toLowerCase()}`}\n        className={classes.link}\n        key={list.id}\n      >\n        <ListItem button className={classes.listItem}>\n          <ListItemIcon>\n            <Icon className={classes.icon}>{list.value.icon}</Icon>\n          </ListItemIcon>\n          <ListItemText primary={list.value.name} />\n        </ListItem>\n      </Link>\n    </div>\n  )\n}\nexport default Card\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}