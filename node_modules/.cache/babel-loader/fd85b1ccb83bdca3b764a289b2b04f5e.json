{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/Lists/DetailsList.js\";\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withDashboard from \"../../hoc/withDashboard\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteList } from \"../../store/actions/actions/lists\";\nimport Loader from \"../UI/Loader\";\nconst useStyles = makeStyles(theme => ({\n  detailsListHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  listTitle: {\n    flexGrow: 3,\n    color: \"#344955\",\n    \"&:first-letter\": {\n      textTransform: \"uppercase\"\n    }\n  }\n}));\n\nconst UserMenu = props => {\n  const classes = useStyles();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        pickedList = _useState2[0],\n        setPickedList = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        listInformation = _useState4[0],\n        setListInformation = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isEditClicked = _useState6[0],\n        setIsEditClicked = _useState6[1];\n\n  const listName = props.match.params.listName;\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists.lists);\n  const user = useSelector(state => state.root.user);\n  const ListModal = lazy(() => import(\"./ListModal\"));\n  useEffect(() => {\n    setPickedList(listName);\n  }, [listName]);\n\n  const handleDelete = () => {\n    let list = lists.find(list => list.value.name.toLowerCase() === pickedList.toLowerCase());\n    dispatch(deleteList({\n      listId: list.id,\n      userId: user.uid\n    }));\n    props.history.push(\"/\");\n  };\n\n  const handleEdit = () => {\n    let list = lists.find(list => list.value.name.toLowerCase() === pickedList.toLowerCase());\n    setListInformation(list);\n    handleEditModal(true)();\n  };\n\n  const handleEditModal = isOpen => () => {\n    setIsEditClicked(isOpen);\n  };\n\n  const renderEditModal = isEditClicked ? React.createElement(Suspense, {\n    fallback: React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ListModal, {\n    open: isEditClicked,\n    handleAddListModal: handleEditModal,\n    list: listInformation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })) : null;\n  return React.createElement(\"div\", {\n    className: classes.detailsListHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.detailsListHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: false,\n    variant: \"h4\",\n    component: \"h2\",\n    className: classes.listTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, pickedList), React.createElement(Button, {\n    className: classes.button,\n    onClick: handleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    className: classes.button,\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Delete\")), renderEditModal);\n};\n\nexport default withDashboard(UserMenu);","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/Lists/DetailsList.js"],"names":["React","useState","useEffect","lazy","Suspense","makeStyles","withDashboard","Button","Typography","useDispatch","useSelector","deleteList","Loader","useStyles","theme","detailsListHeader","display","alignItems","justifyContent","listTitle","flexGrow","color","textTransform","UserMenu","props","classes","pickedList","setPickedList","listInformation","setListInformation","isEditClicked","setIsEditClicked","listName","match","params","dispatch","lists","state","user","root","ListModal","handleDelete","list","find","value","name","toLowerCase","listId","id","userId","uid","history","push","handleEdit","handleEditModal","isOpen","renderEditModal","detailsListHolder","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport withDashboard from \"../../hoc/withDashboard\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteList } from \"../../store/actions/actions/lists\";\n\nimport Loader from \"../UI/Loader\";\n\nconst useStyles = makeStyles(theme => ({\n  detailsListHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  listTitle: {\n    flexGrow: 3,\n    color: \"#344955\",\n    \"&:first-letter\": {\n      textTransform: \"uppercase\"\n    }\n  }\n}));\n\nconst UserMenu = props => {\n  const classes = useStyles();\n  const [pickedList, setPickedList] = useState(\"\");\n  const [listInformation, setListInformation] = useState(\"\");\n  const [isEditClicked, setIsEditClicked] = useState(false);\n  const { listName } = props.match.params;\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists.lists);\n  const user = useSelector(state => state.root.user);\n  const ListModal = lazy(() => import(\"./ListModal\"));\n\n  useEffect(() => {\n    setPickedList(listName);\n  }, [listName]);\n\n  const handleDelete = () => {\n    let list = lists.find(\n      list => list.value.name.toLowerCase() === pickedList.toLowerCase()\n    );\n    dispatch(\n      deleteList({\n        listId: list.id,\n        userId: user.uid\n      })\n    );\n    props.history.push(\"/\");\n  };\n\n  const handleEdit = () => {\n    let list = lists.find(\n      list => list.value.name.toLowerCase() === pickedList.toLowerCase()\n    );\n    setListInformation(list);\n    handleEditModal(true)();\n  };\n  const handleEditModal = isOpen => () => {\n    setIsEditClicked(isOpen);\n  };\n\n  const renderEditModal = isEditClicked ? (\n    <Suspense fallback={<Loader />}>\n      <ListModal\n        open={isEditClicked}\n        handleAddListModal={handleEditModal}\n        list={listInformation}\n      />\n    </Suspense>\n  ) : null;\n\n  return (\n    <div className={classes.detailsListHolder}>\n      <div className={classes.detailsListHeader}>\n        <Typography\n          gutterBottom={false}\n          variant=\"h4\"\n          component=\"h2\"\n          className={classes.listTitle}\n        >\n          {pickedList}\n        </Typography>\n        <Button className={classes.button} onClick={handleEdit}>\n          Edit\n        </Button>\n        <Button className={classes.button} onClick={handleDelete}>\n          Delete\n        </Button>\n      </div>\n      {renderEditModal}\n    </div>\n  );\n};\n\nexport default withDashboard(UserMenu);\n"]},"metadata":{},"sourceType":"module"}