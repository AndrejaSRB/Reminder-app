{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./components/Header/Header\";\nimport ListReminders from \"./components/ListReminders/ListReminders\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Registration from \"./components/Authentication/Registration/Registration\";\nimport Login from \"./components/Authentication/Login/Login\";\nimport ForgotPassword from \"./components/Authentication/ForgotPassword/ForgotPassword\";\nimport fire from \"./config\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actionTypes from \"./store/actions/actionTypes/reminders\";\nimport { GET_LISTS_START } from \"./store/actions/actionTypes/lists\";\nimport BottomNavigation from \"./components/BottomNavigation/BottomNavigation\";\nimport UserMenu from \"./components/User/UserMenu/UserMenu\";\nimport UpdateInformation from \"./components/User/UpdateInformation/UpdateInformation\";\nimport ChangePassword from \"./components/User/ChangePassword/ChangePassword\";\nimport ScrollToTop from \"./components/UI/ScrollToTop\";\nimport SplashScreen from \"./components/SplashScreen/SplashScreen\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport DetailsList from \"./components/Lists/DetailsList\";\nimport FilteredReminders from \"./components/Reminders/FilteredReminders/FilteredReminders\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport './store/actions/actions/reminders';\nimport { getRemindersList } from './store/actions/actions/lists';\nconst useStyles = makeStyles(theme => ({\n  App: {\n    textAlign: \"center\",\n    backgroundColor: \"#F0EFE9\",\n    minHeight: \"100vh\"\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        person = _useState2[0],\n        setPerson = _useState2[1];\n\n  const displaySplashScreen = useSelector(state => state.reminder.splashScreen);\n  const isFilterRouteHidden = useSelector(state => state.reminder.isFilterRouteHidden);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const authListener = () => {\n      fire.auth().onAuthStateChanged(user => {\n        if (user) {\n          setPerson(user);\n          localStorage.setItem(\"id\", user.uid);\n          dispatch({\n            type: actionTypes.USER_LOGGED_IN\n          });\n          dispatch({\n            type: actionTypes.SAVE_USER_INFORMATION,\n            payload: user\n          });\n          dispatch(getRemindersList(user.uid));\n          dispatch({\n            type: GET_LISTS_START,\n            payload: user.uid\n          });\n        } else {\n          setPerson(null);\n          localStorage.removeItem(\"id\");\n          localStorage.removeItem(\"user\");\n        }\n      });\n    };\n\n    authListener();\n  }, [dispatch]);\n  const renderBottomNavigation = person ? React.createElement(BottomNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : null;\n  const renderHeader = person ? React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }) : null;\n  const renderFilterRoute = isFilterRouteHidden ? null : React.createElement(PrivateRoute, {\n    path: \"/:criterium\",\n    exact: true,\n    component: FilteredReminders,\n    person: person,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n  const renderSplashScreen = displaySplashScreen ? React.createElement(SplashScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }) : React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, renderHeader), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ScrollToTop, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(DndProvider, {\n    backend: HTML5Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/sign-up\",\n    exact: true,\n    component: Registration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/forgot-password\",\n    exact: true,\n    component: ForgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/user/edit\",\n    exact: true,\n    component: UpdateInformation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/user/change-password\",\n    exact: true,\n    component: ChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/user\",\n    exact: true,\n    component: UserMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), renderFilterRoute, React.createElement(PrivateRoute, {\n    path: \"/list/:listName\",\n    exact: true,\n    component: DetailsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/\",\n    exact: true,\n    component: ListReminders,\n    person: person,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, renderBottomNavigation));\n  return React.createElement(\"div\", {\n    className: classes.App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, renderSplashScreen);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/App.js"],"names":["React","useState","useEffect","makeStyles","Header","ListReminders","BrowserRouter","Route","Switch","Registration","Login","ForgotPassword","fire","PrivateRoute","useDispatch","useSelector","actionTypes","GET_LISTS_START","BottomNavigation","UserMenu","UpdateInformation","ChangePassword","ScrollToTop","SplashScreen","Hidden","DetailsList","FilteredReminders","DndProvider","HTML5Backend","getRemindersList","useStyles","theme","App","textAlign","backgroundColor","minHeight","classes","person","setPerson","displaySplashScreen","state","reminder","splashScreen","isFilterRouteHidden","dispatch","authListener","auth","onAuthStateChanged","user","localStorage","setItem","uid","type","USER_LOGGED_IN","SAVE_USER_INFORMATION","payload","removeItem","renderBottomNavigation","renderHeader","renderFilterRoute","renderSplashScreen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./components/Header/Header\";\nimport ListReminders from \"./components/ListReminders/ListReminders\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Registration from \"./components/Authentication/Registration/Registration\";\nimport Login from \"./components/Authentication/Login/Login\";\nimport ForgotPassword from \"./components/Authentication/ForgotPassword/ForgotPassword\";\nimport fire from \"./config\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actionTypes from \"./store/actions/actionTypes/reminders\";\nimport { GET_LISTS_START } from \"./store/actions/actionTypes/lists\";\nimport BottomNavigation from \"./components/BottomNavigation/BottomNavigation\";\nimport UserMenu from \"./components/User/UserMenu/UserMenu\";\nimport UpdateInformation from \"./components/User/UpdateInformation/UpdateInformation\";\nimport ChangePassword from \"./components/User/ChangePassword/ChangePassword\";\nimport ScrollToTop from \"./components/UI/ScrollToTop\";\nimport SplashScreen from \"./components/SplashScreen/SplashScreen\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport DetailsList from \"./components/Lists/DetailsList\";\nimport FilteredReminders from \"./components/Reminders/FilteredReminders/FilteredReminders\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport {} from './store/actions/actions/reminders';\nimport { getRemindersList } from './store/actions/actions/lists';\n\nconst useStyles = makeStyles(theme => ({\n  App: {\n    textAlign: \"center\",\n    backgroundColor: \"#F0EFE9\",\n    minHeight: \"100vh\",\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [person, setPerson] = useState(null);\n  const displaySplashScreen = useSelector(state => state.reminder.splashScreen);\n  const isFilterRouteHidden = useSelector(\n    state => state.reminder.isFilterRouteHidden\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const authListener = () => {\n      fire.auth().onAuthStateChanged(user => {\n        if (user) {\n          setPerson(user);\n          localStorage.setItem(\"id\", user.uid);\n          dispatch({\n            type: actionTypes.USER_LOGGED_IN\n          });\n          dispatch({\n            type: actionTypes.SAVE_USER_INFORMATION,\n            payload: user\n          });\n          dispatch(getRemindersList(user.uid));\n          dispatch({\n            type: GET_LISTS_START,\n            payload: user.uid\n          });\n        } else {\n          setPerson(null);\n          localStorage.removeItem(\"id\");\n          localStorage.removeItem(\"user\");\n        }\n      });\n    };\n    authListener();\n  }, [dispatch]);\n\n  const renderBottomNavigation = person ? <BottomNavigation /> : null;\n  const renderHeader = person ? <Header /> : null;\n  const renderFilterRoute = isFilterRouteHidden ? null : (\n    <PrivateRoute\n      path=\"/:criterium\"\n      exact\n      component={FilteredReminders}\n      person={person}\n    />\n  );\n  const renderSplashScreen = displaySplashScreen ? (\n    <SplashScreen />\n  ) : (\n    <BrowserRouter>\n      <Hidden mdUp>{renderHeader}</Hidden>\n      <Switch>\n        <ScrollToTop>\n          <DndProvider backend={HTML5Backend}>\n            <Route path=\"/sign-up\" exact component={Registration} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/forgot-password\" exact component={ForgotPassword} />\n            <PrivateRoute\n              path=\"/user/edit\"\n              exact\n              component={UpdateInformation}\n            />\n            <PrivateRoute\n              path=\"/user/change-password\"\n              exact\n              component={ChangePassword}\n            />\n            <PrivateRoute path=\"/user\" exact component={UserMenu} />\n            {renderFilterRoute}\n            <PrivateRoute\n              path=\"/list/:listName\"\n              exact\n              component={DetailsList}\n            />\n\n            <PrivateRoute path=\"/\" exact component={ListReminders} person={person} />\n          </DndProvider>\n        </ScrollToTop>\n      </Switch>\n      <Hidden mdUp>{renderBottomNavigation}</Hidden>\n    </BrowserRouter>\n  );\n  return <div className={classes.App}>{renderSplashScreen}</div>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}