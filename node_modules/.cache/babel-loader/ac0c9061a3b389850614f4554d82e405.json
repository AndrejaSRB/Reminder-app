{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/UI/IconPicker/IconPicker.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { icons } from \"./icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nconst useStyles = makeStyles(theme => ({\n  modalContainer: {\n    \"& > div > div\": {\n      minWidth: \"80%\",\n      minHeight: 300,\n      [theme.breakpoints.up(\"sm\")]: {\n        minWidth: 500,\n        minHeight: 600\n      }\n    }\n  },\n  textField: {\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  },\n  iconsHolder: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\"\n  },\n  icons: {\n    cursor: \"pointer\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"33.3%\",\n    margin: \"10px 0\",\n    transition: \"all .6s\",\n    height: 50,\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, 0.3)\"\n    },\n    \"& > span\": {\n      fontSize: 40\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"20%\"\n    }\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    \"& > button\": {\n      color: \"#344955\"\n    }\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n});\n\nconst IconPicker = props => {\n  const classes = useStyles();\n  const open = props.open,\n        handleIconPickerModal = props.handleIconPickerModal,\n        handlePickIcon = props.handlePickIcon;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        iconList = _useState4[0],\n        setIconList = _useState4[1];\n\n  const handleClickIcon = icon => () => {\n    handlePickIcon(icon);\n    handleIconPickerModal(false)();\n  };\n\n  const renderIcons = iconList && iconList.length > 0 ? iconList.map(icon => React.createElement(\"div\", {\n    className: classes.icons,\n    key: icon,\n    onClick: handleClickIcon(icon),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, icon))) : icons.map(icon => React.createElement(\"div\", {\n    className: classes.icons,\n    key: icon,\n    onClick: handleClickIcon(icon),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, icon)));\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n\n    if (e.target.value.length >= 2) {\n      let iconsList = [];\n      icons.map(icon => icon.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1 ? iconsList.push(icon) : null);\n      setIconList(iconsList);\n    } else {\n      setIconList(icons);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleIconPickerModal(false),\n    className: classes.modalContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"p\",\n    className: classes.pickedIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Pick some icon:\"), React.createElement(TextField, {\n    type: \"text\",\n    placeholder: \"Search\",\n    label: \"Search\",\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.textField,\n    value: search,\n    onChange: handleSearch,\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Instead space use underscore!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"report\")))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.iconsHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, renderIcons))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleIconPickerModal(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Close\"))));\n};\n\nexport default IconPicker;","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/UI/IconPicker/IconPicker.js"],"names":["React","useState","Button","Dialog","DialogContent","Slide","makeStyles","Icon","Typography","DialogTitle","DialogActions","icons","TextField","InputAdornment","Tooltip","useStyles","theme","modalContainer","minWidth","minHeight","breakpoints","up","textField","marginLeft","spacing","marginRight","width","iconsHolder","display","flexWrap","alignItems","cursor","justifyContent","margin","transition","height","backgroundColor","fontSize","buttons","color","Transition","forwardRef","props","ref","IconPicker","classes","open","handleIconPickerModal","handlePickIcon","search","setSearch","iconList","setIconList","handleClickIcon","icon","renderIcons","length","map","handleSearch","e","target","value","iconsList","toLowerCase","indexOf","push","pickedIcon","endAdornment"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAACU,KAAK,KAAK;AACrCC,EAAAA,cAAc,EAAE;AACd,qBAAiB;AACfC,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,SAAS,EAAE,GAFI;AAGf,OAACH,KAAK,CAACI,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,QAAAA,QAAQ,EAAE,GADkB;AAE5BC,QAAAA,SAAS,EAAE;AAFiB;AAHf;AADH,GADqB;AAWrCG,EAAAA,SAAS,EAAE;AACTA,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADH;AAETC,MAAAA,WAAW,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd,CAFJ;AAGTE,MAAAA,KAAK,EAAE;AAHE;AADF,GAX0B;AAkBrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,QAAQ,EAAE,MAFC;AAGXC,IAAAA,UAAU,EAAE;AAHD,GAlBwB;AAuBrCnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,MAAM,EAAE,SADH;AAELH,IAAAA,OAAO,EAAE,MAFJ;AAGLI,IAAAA,cAAc,EAAE,QAHX;AAILF,IAAAA,UAAU,EAAE,QAJP;AAKLJ,IAAAA,KAAK,EAAE,OALF;AAMLO,IAAAA,MAAM,EAAE,QANH;AAOLC,IAAAA,UAAU,EAAE,SAPP;AAQLC,IAAAA,MAAM,EAAE,EARH;AASL,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR,KATN;AAYL,gBAAY;AACVC,MAAAA,QAAQ,EAAE;AADA,KAZP;AAeL,KAACrB,KAAK,CAACI,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BK,MAAAA,KAAK,EAAE;AADqB;AAfzB,GAvB8B;AA0CrCY,EAAAA,OAAO,EAAE;AACPV,IAAAA,OAAO,EAAE,MADF;AAEPI,IAAAA,cAAc,EAAE,UAFT;AAGPF,IAAAA,UAAU,EAAE,QAHL;AAIP,kBAAc;AACZS,MAAAA,KAAK,EAAE;AADK;AAJP;AA1C4B,CAAL,CAAN,CAA5B;AAoDA,MAAMC,UAAU,GAAGxC,KAAK,CAACyC,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAClE,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkB,CAAnB;;AAIA,MAAME,UAAU,GAAGF,KAAK,IAAI;AAC1B,QAAMG,OAAO,GAAG9B,SAAS,EAAzB;AAD0B,QAElB+B,IAFkB,GAE8BJ,KAF9B,CAElBI,IAFkB;AAAA,QAEZC,qBAFY,GAE8BL,KAF9B,CAEZK,qBAFY;AAAA,QAEWC,cAFX,GAE8BN,KAF9B,CAEWM,cAFX;;AAAA,oBAGE/C,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,QAGnBgD,MAHmB;AAAA,QAGXC,SAHW;;AAAA,qBAIMjD,QAAQ,CAAC,EAAD,CAJd;AAAA;AAAA,QAInBkD,QAJmB;AAAA,QAITC,WAJS;;AAM1B,QAAMC,eAAe,GAAGC,IAAI,IAAI,MAAM;AACpCN,IAAAA,cAAc,CAACM,IAAD,CAAd;AACAP,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAHD;;AAKA,QAAMQ,WAAW,GACfJ,QAAQ,IAAIA,QAAQ,CAACK,MAAT,GAAkB,CAA9B,GACIL,QAAQ,CAACM,GAAT,CAAaH,IAAI,IACf;AACE,IAAA,SAAS,EAAET,OAAO,CAAClC,KADrB;AAEE,IAAA,GAAG,EAAE2C,IAFP;AAGE,IAAA,OAAO,EAAED,eAAe,CAACC,IAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CALF,CADF,CADJ,GAUI3C,KAAK,CAAC8C,GAAN,CAAUH,IAAI,IACZ;AACE,IAAA,SAAS,EAAET,OAAO,CAAClC,KADrB;AAEE,IAAA,GAAG,EAAE2C,IAFP;AAGE,IAAA,OAAO,EAAED,eAAe,CAACC,IAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CALF,CADF,CAXN;;AAqBA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACxBT,IAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeL,MAAf,IAAyB,CAA7B,EAAgC;AAC9B,UAAIM,SAAS,GAAG,EAAhB;AACAnD,MAAAA,KAAK,CAAC8C,GAAN,CAAUH,IAAI,IACZA,IAAI,CAACS,WAAL,GAAmBC,OAAnB,CAA2BL,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeE,WAAf,EAA3B,IAA2D,CAAC,CAA5D,GACID,SAAS,CAACG,IAAV,CAAeX,IAAf,CADJ,GAEI,IAHN;AAKAF,MAAAA,WAAW,CAACU,SAAD,CAAX;AACD,KARD,MAQO;AACLV,MAAAA,WAAW,CAACzC,KAAD,CAAX;AACD;AACF,GAbD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEmC,IADR;AAEE,IAAA,mBAAmB,EAAEN,UAFvB;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,OAAO,EAAEO,qBAAqB,CAAC,KAAD,CAJhC;AAKE,IAAA,SAAS,EAAEF,OAAO,CAAC5B,cALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,YAAY,MADd;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,SAAS,EAAC,GAHZ;AAIE,IAAA,SAAS,EAAE4B,OAAO,CAACqB,UAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,SAAS,MALX;AAME,IAAA,SAAS,EAAErB,OAAO,CAACvB,SANrB;AAOE,IAAA,KAAK,EAAE2B,MAPT;AAQE,IAAA,QAAQ,EAAES,YARZ;AASE,IAAA,UAAU,EAAE;AACVS,MAAAA,YAAY,EACV,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAFQ,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAPF,EAoCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAAClB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC4B,WAAtC,CADF,CADF,CApCF,EAyCE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,qBAAqB,CAAC,KAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAzCF,CADF,CADF;AAiDD,CAhGD;;AAkGA,eAAeH,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport { icons } from \"./icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles(theme => ({\n  modalContainer: {\n    \"& > div > div\": {\n      minWidth: \"80%\",\n      minHeight: 300,\n      [theme.breakpoints.up(\"sm\")]: {\n        minWidth: 500,\n        minHeight: 600\n      }\n    }\n  },\n  textField: {\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  },\n  iconsHolder: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\"\n  },\n  icons: {\n    cursor: \"pointer\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"33.3%\",\n    margin: \"10px 0\",\n    transition: \"all .6s\",\n    height: 50,\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 0, 0, 0.3)\"\n    },\n    \"& > span\": {\n      fontSize: 40\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"20%\"\n    }\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    \"& > button\": {\n      color: \"#344955\"\n    }\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst IconPicker = props => {\n  const classes = useStyles();\n  const { open, handleIconPickerModal, handlePickIcon } = props;\n  const [search, setSearch] = useState(\"\");\n  const [iconList, setIconList] = useState([]);\n\n  const handleClickIcon = icon => () => {\n    handlePickIcon(icon);\n    handleIconPickerModal(false)();\n  };\n\n  const renderIcons =\n    iconList && iconList.length > 0\n      ? iconList.map(icon => (\n          <div\n            className={classes.icons}\n            key={icon}\n            onClick={handleClickIcon(icon)}\n          >\n            <Icon>{icon}</Icon>\n          </div>\n        ))\n      : icons.map(icon => (\n          <div\n            className={classes.icons}\n            key={icon}\n            onClick={handleClickIcon(icon)}\n          >\n            <Icon>{icon}</Icon>\n          </div>\n        ));\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n    if (e.target.value.length >= 2) {\n      let iconsList = [];\n      icons.map(icon =>\n        icon.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1\n          ? iconsList.push(icon)\n          : null\n      );\n      setIconList(iconsList);\n    } else {\n      setIconList(icons);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleIconPickerModal(false)}\n        className={classes.modalContainer}\n      >\n        <DialogTitle>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"p\"\n            className={classes.pickedIcon}\n          >\n            Pick some icon:\n          </Typography>\n          <TextField\n            type=\"text\"\n            placeholder=\"Search\"\n            label=\"Search\"\n            variant=\"outlined\"\n            fullWidth\n            className={classes.textField}\n            value={search}\n            onChange={handleSearch}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <Tooltip title=\"Instead space use underscore!\">\n                    <Icon>report</Icon>\n                  </Tooltip>\n                </InputAdornment>\n              )\n            }}\n          />\n        </DialogTitle>\n        <DialogContent>\n          <div>\n            <div className={classes.iconsHolder}>{renderIcons}</div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleIconPickerModal(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default IconPicker;\n"]},"metadata":{},"sourceType":"module"}