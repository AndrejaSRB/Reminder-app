{"ast":null,"code":"const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nexport const composeValidators = (...validators) => value => validators.reduce((error, validator) => error || validator(value), undefined);\nexport const validateEmail = value => value ? validEmailRegex.test(value) ? \"\" : \"Wrong format! You have to use test@gmail.com.\" : \"E-mail is required.\";\nexport const validateUserName = value => value ? \"\" : \"Username is required.\";\nexport const validateListName = value => value ? \"\" : \"List name is required.\";\nexport const validatePassword = value => value ? \"\" : \"Password is required.\";\nexport const validateTitle = value => value ? \"\" : \"Title is reuqired.\";\nexport const validateDate = value => value ? \"\" : \"Date is required.\";\nexport const validateImportance = value => value ? \"\" : \"Importance is required.\";\nexport const validateDescription = value => value ? value.length > 200 ? \"Description is limited to 200 characters.\" : \"\" : \"Description is required.\";","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/Authentication/validation.js"],"names":["validEmailRegex","RegExp","composeValidators","validators","value","reduce","error","validator","undefined","validateEmail","test","validateUserName","validateListName","validatePassword","validateTitle","validateDate","validateImportance","validateDescription","length"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,MAAM,CAC5B,wHAD4B,CAA9B;AAIA,OAAO,MAAMC,iBAAiB,GAAG,CAAC,GAAGC,UAAJ,KAAmBC,KAAK,IACvDD,UAAU,CAACE,MAAX,CAAkB,CAACC,KAAD,EAAQC,SAAR,KAAsBD,KAAK,IAAIC,SAAS,CAACH,KAAD,CAA1D,EAAmEI,SAAnE,CADK;AAGP,OAAO,MAAMC,aAAa,GAAGL,KAAK,IAChCA,KAAK,GACDJ,eAAe,CAACU,IAAhB,CAAqBN,KAArB,IACE,EADF,GAEE,+CAHD,GAID,qBALC;AAOP,OAAO,MAAMO,gBAAgB,GAAGP,KAAK,IAAKA,KAAK,GAAG,EAAH,GAAQ,uBAAhD;AAEP,OAAO,MAAMQ,gBAAgB,GAAGR,KAAK,IAAKA,KAAK,GAAG,EAAH,GAAQ,wBAAhD;AAEP,OAAO,MAAMS,gBAAgB,GAAGT,KAAK,IAAKA,KAAK,GAAG,EAAH,GAAQ,uBAAhD;AAEP,OAAO,MAAMU,aAAa,GAAGV,KAAK,IAAKA,KAAK,GAAG,EAAH,GAAQ,oBAA7C;AAEP,OAAO,MAAMW,YAAY,GAAGX,KAAK,IAAKA,KAAK,GAAG,EAAH,GAAQ,mBAA5C;AAEP,OAAO,MAAMY,kBAAkB,GAAGZ,KAAK,IACrCA,KAAK,GAAG,EAAH,GAAQ,yBADR;AAGP,OAAO,MAAMa,mBAAmB,GAAGb,KAAK,IACxCA,KAAK,GAAGA,KAAK,CAACc,MAAN,GAAe,GAAf,GAAqB,2CAArB,GAAmE,EAAtE,GAA2E,0BADzE","sourcesContent":["const validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nexport const composeValidators = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n\nexport const validateEmail = value =>\n  value\n    ? validEmailRegex.test(value)\n      ? \"\"\n      : \"Wrong format! You have to use test@gmail.com.\"\n    : \"E-mail is required.\";\n\nexport const validateUserName = value => (value ? \"\" : \"Username is required.\");\n\nexport const validateListName = value => (value ? \"\" : \"List name is required.\");\n\nexport const validatePassword = value => (value ? \"\" : \"Password is required.\");\n\nexport const validateTitle = value => (value ? \"\" : \"Title is reuqired.\");\n\nexport const validateDate = value => (value ? \"\" : \"Date is required.\");\n\nexport const validateImportance = value =>\n  value ? \"\" : \"Importance is required.\";\n  \nexport const validateDescription = value =>\nvalue ? value.length > 200 ? \"Description is limited to 200 characters.\" : \"\" : \"Description is required.\";\n\n"]},"metadata":{},"sourceType":"module"}