{"ast":null,"code":"import _slicedToArray from \"/Users/andreja/Desktop/Projekti/Reminders/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andreja/Desktop/Projekti/Reminders/src/components/Reminders/FilteredReminders/FilteredReminders.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Reminder from \"../Reminder/Reminder\";\nimport { useSelector } from \"react-redux\";\nimport withDashboard from \"../../../hoc/withDashboard\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst FilteredReminders = props => {\n  const high = useSelector(state => state.reminder.highImportance);\n  const medium = useSelector(state => state.reminder.mediumImportance);\n  const low = useSelector(state => state.reminder.lowImportance);\n  const tomorrow = useSelector(state => state.reminder.tomorrow);\n  const upcoming = useSelector(state => state.reminder.upcoming);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        choosedList = _useState2[0],\n        setChoosedList = _useState2[1];\n\n  const criterium = props.match.params.criterium;\n  useEffect(() => {\n    if (criterium) {\n      if (criterium === \"high\") {\n        setChoosedList(high);\n      } else if (criterium === \"medium\") {\n        setChoosedList(medium);\n      } else if (criterium === \"low\") {\n        setChoosedList(low);\n      } else if (criterium === \"upcoming\") {\n        setChoosedList(upcoming);\n      } else if (criterium === \"tomorrow\") {\n        setChoosedList(tomorrow);\n      }\n    }\n  }, [criterium]);\n\n  const rederReminders = reminder => {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      lg: 3,\n      key: reminder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Reminder, {\n      reminder: reminder.value,\n      id: reminder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  };\n\n  const renderCriteriumName = criterium === \"upcoming\" || criterium === \"tomorrow\" ? \"Your list of \".concat(criterium, \" reminders\") : \"Your list of \".concat(criterium, \" important reminders\");\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    component: \"h2\",\n    color: \"textSecondary\",\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, renderCriteriumName)), choosedList ? choosedList && choosedList.length ? choosedList.map(rederReminders) : null : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"There is no \", criterium, \" reminders.\"));\n};\n\nexport default withDashboard(FilteredReminders);","map":{"version":3,"sources":["/Users/andreja/Desktop/Projekti/Reminders/src/components/Reminders/FilteredReminders/FilteredReminders.js"],"names":["React","useState","useEffect","Reminder","useSelector","withDashboard","Grid","Typography","FilteredReminders","props","high","state","reminder","highImportance","medium","mediumImportance","low","lowImportance","tomorrow","upcoming","choosedList","setChoosedList","criterium","match","params","rederReminders","id","value","renderCriteriumName","length","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Reminder from \"../Reminder/Reminder\";\nimport { useSelector } from \"react-redux\";\nimport withDashboard from \"../../../hoc/withDashboard\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst FilteredReminders = props => {\n  const high = useSelector(state => state.reminder.highImportance);\n  const medium = useSelector(state => state.reminder.mediumImportance);\n  const low = useSelector(state => state.reminder.lowImportance);\n  const tomorrow = useSelector(state => state.reminder.tomorrow);\n  const upcoming = useSelector(state => state.reminder.upcoming);\n  const [choosedList, setChoosedList] = useState(null);\n  const { criterium } = props.match.params;\n  useEffect(() => {\n    if (criterium) {\n      if (criterium === \"high\") {\n        setChoosedList(high);\n      } else if (criterium === \"medium\") {\n        setChoosedList(medium);\n      } else if (criterium === \"low\") {\n        setChoosedList(low);\n      } else if (criterium === \"upcoming\") {\n        setChoosedList(upcoming);\n      } else if (criterium === \"tomorrow\") {\n        setChoosedList(tomorrow);\n      }\n    }\n  }, [criterium]);\n\n  const rederReminders = reminder => {\n    return (\n      <Grid item={true} xs={12} md={4} lg={3} key={reminder.id}>\n        <Reminder reminder={reminder.value} id={reminder.id} />\n      </Grid>\n    );\n  };\n  const renderCriteriumName =\n    criterium === \"upcoming\" || criterium === \"tomorrow\"\n      ? `Your list of ${criterium} reminders`\n      : `Your list of ${criterium} important reminders`;\n  return (\n    <Grid container spacing={2}>\n       <Grid item xs={12}>\n          <Typography\n            gutterBottom\n            variant=\"subtitle1\"\n            component=\"h2\"\n            color=\"textSecondary\"\n            align=\"left\"\n          >\n            {renderCriteriumName}\n          </Typography>\n        </Grid>\n      {choosedList ? (\n        choosedList && choosedList.length ? (\n          choosedList.map(rederReminders)\n        ) : null\n      ) : (\n        <div>There is no {criterium} reminders.</div>\n      )}\n    </Grid>\n  );\n};\n\nexport default withDashboard(FilteredReminders);\n"]},"metadata":{},"sourceType":"module"}